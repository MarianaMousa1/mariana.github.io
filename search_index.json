[["introductie.html", "Projecticum Introductie 1 Introductie", " Projecticum Introductie Mariana Mousa 2024-05-25 1 Introductie Welkom bij mijn portfolio! Mijn naam is Mariana Mousa en dit portfolio dient als een verzameling van mijn werk en projecten op het gebied van data-analyse en wetenschappelijk onderzoek. Als student life sciences heb ik mij gericht op het verkennen en analyseren van biologische gegevens om inzichten te genereren die impactvol zijn. Overzicht van mijn Werk Mijn portfolio omvat een breed scala aan projecten en opdrachten, variërend van academische onderzoeksprojecten tot praktische data-analyse en visualisatie. Elk project is ontworpen om mijn vaardigheden en expertise op het gebied van data-analyse, programmeervaardigheden en probleemoplossend vermogen te demonstreren. Structuur van het Portfolio Dit portfolio is opgedeeld in verschillende secties, elk met een specifiek project of thema: 02_CV In dit onderdeel presenteer ik mijn curriculum vitae, waarin mijn academische en professionele achtergrond, vaardigheden en ervaringen zijn samengevat. Dit document biedt een overzicht van mijn kwalificaties en prestaties. 03_vooruitkijken Hier beschrijf ik mijn toekomstvisie en doelen. Ik reflecteer op mijn huidige vaardigheden en ervaring en identificeer gebieden waar ik verder in wil groeien. Dit onderdeel toont mijn ambitie en plan voor professionele ontwikkeling. 04_HLAR Dit project richt zich op Human leukocyte antigens tools in R (hlar). hlaR tools Is een package met verschillende functies voor eplet-analyse van HLA (humaan leukocytenantigeen) mismatches tussen donor en ontvanger. De data die in dit opdracht wordt gebruikt is van is geiïmporteerd van Allele Frequency Net Database geimporteerd. 05_Gruerrilla_analytics In dit onderdeel laat ik De organisatie van DAUR2 bestand met het guerrilla-analytics. 06_C_elegans_plaatexperiment Dit project beschrijft een experiment met de nematode C. elegans. Ik heb de experimentele opzet, dataverzameling en analyse gedocumenteerd. In dit experiment werden de volwassen C.elegans nematoden blootgesteld aan variërende concentraties van verschillende verbindingen. 07_1_reproducibility &amp; 07_2_reproducibility In deze twee onderdelen focus ik op de reproduceerbaarheid van wetenschappelijk onderzoek. Ik bespreek de reproducibility van twee verschillende wetenschappelijke artiklen. . 08_SQL Dit onderdeel bevat mijn werk met SQL voor het beheren en analyseren van relationele databases. Ik presenteer verschillende queries en analyses die ik heb uitgevoerd om inzicht te krijgen in complexe datasets. 09_parameters Hier richt ik mij op het gebruik van parameterisatie in data-analyse. Ik demonstreer hoe parameters kunnen worden gebruikt om flexibele en herbruikbare analyses te maken, met praktische voorbeelden en toepassingen. 10_rpackage In dit onderdeel introduceer ik mijn eigen ontwikkelde R-pakket, genaamd AMRnetherland. Dit pakket biedt functies en hulpmiddelen voor de analyse van antibioticaresistentie. Ik bespreek de functionaliteiten en hoe het bijdraagt aan mijn onderzoekswerk. 11_referenties Dit onderdeel bevat de referenties en bronnen die ik heb gebruikt bij het uitvoeren van mijn projecticum. Het biedt een overzicht van de literatuur die mijn werk ondersteunen. Gebruikte Referenties Bij het samenstellen van mijn portfolio heb ik gebruik gemaakt van een verscheidenheid aan bronnen, waaronder wetenschappelijke artikelen, online bronnen en praktische handleidingen. Deze referenties zijn opgenomen in de bibliografie aan het einde van deze introductie. Toekomstige Ontwikkelingen Als toekomstig doel streef ik ernaar om mijn portfolio uit te breiden met meer geavanceerde projecten en innovatieve analyses. Ik ben voortdurend bezig met het verbeteren van mijn vaardigheden en het verkennen van nieuwe technologieën binnen het domein van data-analyse. Ik nodig je uit om mijn portfolio te verkennen en meer te leren over mijn werk en passie voor data-analyse. Mocht je vragen hebben of willen samenwerken, neem dan gerust contact met me op. Veel leesplezier! "],["cv.html", "2 CV", " 2 CV "],["vooruit-kijken.html", "3 vooruit kijken", " 3 vooruit kijken Over twee jaar zie ik mezelf graag mijn vaardigheden en kennis op het gebied van de data science en life science verder ontwikkelen. Daarom overweeg ik om een Master Projectmanagement te volgen om mijn expertise te vergroten en mijn carrière vooruit te helpen. In de toekomst wil ik graag mijn kennis in de wetenschap gebruiken om de kwaliteit van het leven van de mensen in het algemeen en specifiek van de patienten verbeteren door het begeleiden van onderzoeks projecten. Op dit moment ben ik actief bezig met het vergroten van mijn kennis en vaardigheden om de projecten goed te kunnen regelen en duidelijke plannen maken. De volgende vaardigheid die ik graag zou willen leren naast leiderschapsvaardigheid, is het uitvoeren van NGS-analyses en het beheersen van HLA-typing R-tools om de genetische variaties te bestuderen die verband houden met ziekten, zoals kanker, auto-immuunziekten en genetische aandoeningen. Dit kan leiden tot een dieper inzicht in de oorzaken van ziekten en nieuwe behandelingsmogelijkheden. "],["human-leukocyte-antigens-tools-in-r-hlar.html", "4 Human leukocyte antigens tools in R (hlar) 4.1 Het menselijke HLA-systeem 4.2 hlaR tools 4.3 Data cleaning and allele level analysis 4.4 CalAlleleMismFreq 4.5 CalAlleleTopN topN meest voorkomende HLA-allelen 4.6 CalAlleleMismFreq 4.7 Calculate class I HLA eplet mismatch 4.8 CalEpletMHCI 4.9 Calculate class II HLA eplet mismatch 4.10 CalEpletMHCII 4.11 HLA-allelen normaliseren 4.12 CleanAllele 4.13 Evaluate mismatched alleles 4.14 EvalAlleleMism 4.15 Count HLA mismatch at the allele level 4.16 CountAlleleMism 4.17 ImputeHaplo", " 4 Human leukocyte antigens tools in R (hlar) HLA-typering, ook bekend als HLA-genotypering of HLA-typing, is een laboratoriumtechniek die wordt gebruikt om de genetische varianten van de menselijke leukocytenantigeen (HLA)-genen in een individu te identificeren. HLA-genen coderen voor eiwitten die zich op het celoppervlak bevinden en een cruciale rol spelen bij het immuunsysteem door het lichaam te helpen onderscheid te maken tussen eigen cellen en indringers zoals bacteriën en virussen. 4.1 Het menselijke HLA-systeem Is zeer polymorf, wat betekent dat er veel verschillende varianten (allelen) van HLA-genen zijn die tussen individuen kunnen verschillen. Deze genetische variabiliteit speelt een belangrijke rol bij het bepalen van de compatibiliteit van weefsels en organen voor transplantatie, evenals bij het risico op auto-immuunziekten, allergieën en andere immuungerelateerde aandoeningen. HLA-typering omvat het identificeren van de specifieke allelen van HLA-klasse I-genen (HLA-A, HLA-B en HLA-C) en HLA-klasse II-genen (HLA-DR, HLA-DQ en HLA-DP) in een individu. Dit kan worden gedaan met behulp van verschillende laboratoriumtechnieken, waaronder moleculaire methoden zoals polymerasekettingreactie (PCR) gevolgd door sequentieanalyse, next-generation sequencing (NGS), en andere gespecialiseerde technieken. HLA-typering is essentieel bij transplantatiegeneeskunde omdat een goede match tussen donor en ontvanger op HLA-allelen het risico op afstoting van getransplanteerde weefsels en organen vermindert. Het wordt ook gebruikt bij het onderzoek naar immuungerelateerde aandoeningen om te begrijpen hoe genetische variaties in het HLA-systeem het risico op ziekte beïnvloeden. knitr::include_graphics(&quot;images/HLA_classes.webp&quot;) Figure 1. Isotypes of human major histocompatibility proteins 4.2 hlaR tools Is een package met verschillende functies voor eplet-analyse van HLA (humaan leukocytenantigeen) mismatches tussen donor en ontvanger. De data die in dit opdracht wordt gebruikt is geiïmporteerd van Allele Frequency Net Database. knitr::include_graphics(&quot;images/HLA_worflow.jpg&quot;) Figer2: hlaR workflow De dataset is geiïmporteerd van Allele Frequency Net Database Link:https://www.allelefrequencies.net/population.asp?pop_id=3327 4.3 Data cleaning and allele level analysis 4.4 CalAlleleMismFreq De eerste stap om de hla analyse toe te passen is het inspecteren van de meest voorkomende allelen in de dataset van de patienten en de doners gevolgd door de evaluatie van HLA-mismatches op allelniveau binnen een populatie. De input van CalAlleleMismFreq() functie is HLA-typeringen van verschillende dooners en ontvangers. Voor elk donor-ontvangerpaar identificeert de functie de niet-overeenkomende allelen, gerangschikt op basis van hun frequentie in de totale populatie zoals weergegeven in de invoerdataset # Lees de recipient data in zonder headers rcptDATA &lt;- read.csv(&quot;doc/hla_bestanden/AFND0001243.csv&quot;, header = FALSE) # Definieer de nieuwe kolomnamen new_headers1 &lt;- c(&quot;id&quot;, &quot;recipient.a1&quot;, &quot;recipient.a2&quot;, &quot;recipient.b1&quot;, &quot;recipient.b2&quot;, &quot;recipient.c1&quot;, &quot;recipient.c2&quot;, &quot;recipient.drb11&quot;, &quot;recipient.drb12&quot;) #new_headers colnames(rcptDATA) &lt;- new_headers1 colnames(rcptDATA) ## [1] &quot;id&quot; &quot;recipient.a1&quot; &quot;recipient.a2&quot; &quot;recipient.b1&quot; ## [5] &quot;recipient.b2&quot; &quot;recipient.c1&quot; &quot;recipient.c2&quot; &quot;recipient.drb11&quot; ## [9] &quot;recipient.drb12&quot; # Lees de donor data in zonder headers donorDATA &lt;- read.csv(&quot;doc/hla_bestanden/AFND0003327.csv&quot;, header = FALSE) #new_headers new_headers2 &lt;- c(&quot;id&quot;, &quot;donor.a1&quot;, &quot;donor.a2&quot;, &quot;donor.b1&quot;, &quot;donor.b2&quot;, &quot;donor.c1&quot;, &quot;donor.c2&quot;, &quot;donor.drb11&quot;, &quot;donor.drb12&quot;) colnames(donorDATA) &lt;- new_headers2 colnames(donorDATA) ## [1] &quot;id&quot; &quot;donor.a1&quot; &quot;donor.a2&quot; &quot;donor.b1&quot; &quot;donor.b2&quot; ## [6] &quot;donor.c1&quot; &quot;donor.c2&quot; &quot;donor.drb11&quot; &quot;donor.drb12&quot; # Voeg de twee data samen op basis van de kolom id. DATA &lt;- merge(rcptDATA, donorDATA, by.x = &quot;id&quot;, by.y = &quot;id&quot;) head(DATA) ## id recipient.a1 recipient.a2 recipient.b1 recipient.b2 recipient.c1 ## 1 1 A*02:01 A*11:01 B*18:01 B*40:01 C*03:04 ## 2 2 A*03:01 A*26:01 B*07:02 B*35:01 C*04:01 ## 3 3 A*24:02 A*11:01 B*08:01 B*44:02 C*05:01 ## 4 4 A*68:01:02 A*29:02 B*07:02 B*40:01 C*03:04 ## 5 5 A*01:01 A*01:01 B*08:01 B*57:01 C*06:02 ## 6 6 A*03:01 A*25:01 B*07:02 B*27:05 C*01:02 ## recipient.c2 recipient.drb11 recipient.drb12 donor.a1 donor.a2 donor.b1 ## 1 C*05:01 DRB1*04:04 DRB1*03:01:01 A*11:01 A*68:02 B*15:16 ## 2 C*07:02 DRB1*01:01 DRB1*04:04 A*02:01 A*33:03 B*07:02 ## 3 C*07:01:01 DRB1*04:01:01 DRB1*03:01:01 A*23:01 A*68:02 B*15:16 ## 4 C*07:02 DRB1*15:01:01 DRB1*04:01:01 A*31:01 A*31:01 B*35:20 ## 5 C*07:01:01 DRB1*07:01:01 DRB1*13:01 A*02:01 A*23:01 B*15:03 ## 6 C*07:02 DRB1*15:01:01 DRB1*01:03 A*33:01 A*36:01 B*14:02 ## donor.b2 donor.c1 donor.c2 donor.drb11 donor.drb12 ## 1 B*35:01 C*04:01 C*14:02 DRB1*01:01 DRB1*01:02 ## 2 B*53:01 C*04:01 C*07:02 DRB1*08:04 DRB1*15:01 ## 3 B*50:02 C*04:01 C*14:02 DRB1*01:02 DRB1*14:01 ## 4 B*39:05 C*03:04 C*04:01 DRB1*08:02 DRB1*14:02 ## 5 B*45:01 C*02:10 C*16:01 DRB1*01:02 DRB1*12:01 ## 6 B*53:01 C*04:01 C*08:02 DRB1*07:01 DRB1*11:01 Gebruik de functie CalAlleleMismFreq om de mismatch te evalueren op allelniveau tussen donor en ontvanger en presenteert vervolgens de meest voorkomende niet-overeenkomende allelen. # DATA #allele A don_a &lt;- c(&quot;donor.a1&quot;, &quot;donor.a2&quot;) rcpt_a &lt;- c(&quot;recipient.a1&quot;, &quot;recipient.a2&quot;) re_a &lt;- CalAlleleMismFreq(dat_in = DATA, nms_don = don_a, nms_rcpt = rcpt_a) head(re_a) ## # A tibble: 6 × 2 ## allele freq ## &lt;chr&gt; &lt;int&gt; ## 1 A*23:01 37 ## 2 A*02:01 28 ## 3 A*03:01 19 ## 4 A*24:02 16 ## 5 A*30:01 16 ## 6 A*30:02 14 conclusie CalAlleleMismFreq: Meest Voorkomende Allelen: Het allel A23:01 komt het meest voor met een frequentie van 37. A02:01 is het op een na meest voorkomende allel met een frequentie van 28. Minder Voorkomende Allelen: De allelen A01:03 en A68:02 hebben beide een frequentie van 11. A01:01 en A74:01 hebben beide een frequentie van 10.Meest voorkomende allele in dit geval is A*23:01, met een frequentie van 37. 4.5 CalAlleleTopN topN meest voorkomende HLA-allelen 4.6 CalAlleleMismFreq Voer opgeschoonde HLA-gegevens (Human Leukocyte Antigen) in voor een populatie transplantatiedonoren en ontvangers om de meest voorkomende allelen in de populatie te bepalen. #CalAlleleTopN topN most frequent HLA alleles don_b &lt;- c(&quot;donor.a1&quot;, &quot;donor.a2&quot;) rcpt_b &lt;- c(&quot;recipient.a1&quot;, &quot;recipient.a2&quot;) re_b &lt;- CalAlleleTopN(dat_in = DATA, nms_don = don_b, nms_rcpt = rcpt_b, top_n = 5) head(re_b) ## # A tibble: 6 × 3 ## part_type allele freq ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 don A*02:01 39 ## 2 don A*23:01 38 ## 3 don A*03:01 25 ## 4 don A*24:02 18 ## 5 don A*30:01 16 ## 6 rcpt A*02:01 73 conclusie CalAlleleTopNDi: De meest voorkomende allelen en hun frequenties onder donoren (don) zijn: Allel 2 met frequentie 15 Allel 29 met frequentie 5 Allel 11 met frequentie 4 Allel 3 met frequentie 3 Allel 25 en allel 68 beide met frequentie 2 Frequenties voor Ontvangers: De meest voorkomende allelen en hun frequenties onder ontvangers (rcpt) zijn: Allel 2 met frequentie 17 Allel 1 met frequentie 6 Allel 32 met frequentie 5 Allel 24 met frequentie 4 Vergelijking tussen Donoren en Ontvangers: Het allel 2 is het meest voorkomend bij zowel donoren als ontvangers, hoewel de frequentie hoger is bij ontvangers (17) dan bij donoren (15). De allelen en hun frequenties verschillen verder tussen donoren en ontvangers, wat wijst op verschillen in de genetische samenstelling tussen deze twee groepen. 4.7 Calculate class I HLA eplet mismatch 4.8 CalEpletMHCI Deze functie is ontworpen te om eplet-mismatches te berekenen voor MHC-I (Major Histocompatibility Complex Class I) moleculen. Eplets zijn specifieke aminozuursequenties op HLA-moleculen die een rol spelen in de herkenning door het immuunsysteem. Het identificeren van mismatches in eplets tussen donoren en ontvangers is cruciaal voor transplantatie-compatibiliteit, omdat mismatches kunnen leiden tot afstoting van het getransplanteerde orgaan. library(readr) MHC_I_eplet_v3 &lt;- read_csv(&quot;doc/hla_bestanden/MHC_I_eplet_v3.csv&quot;) ## New names: ## Rows: 73 Columns: 1892 ## ── Column specification ## ───────────────────────── Delimiter: &quot;,&quot; chr ## (1891): type, A*01:01, A*01:02, A*01:03, ## A*01:06, A*01:07, A*01:08, A*01... dbl (1): ## index ## ℹ Use `spec()` to retrieve the full column ## specification for this data. ℹ Specify the ## column types or set `show_col_types = FALSE` to ## quiet this message. ## • `B*39:02` -&gt; `B*39:02...1079` ## • `B*39:02` -&gt; `B*39:02...1080` head(MHC_I_eplet_v3) ## # A tibble: 6 × 1,892 ## index type `A*01:01` `A*01:02` `A*01:03` `A*01:06` `A*01:07` `A*01:08` ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 AbV &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 56R &lt;NA&gt; ## 2 2 AbV 44KM 44KM 44KM 44KM &lt;NA&gt; 44KM ## 3 3 AbV &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 4 4 AbV 62QE 62QE 62QE 62QE 62QE 62QE ## 5 5 AbV &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 6 6 AbV 65RNA 65RNA 65RNA 65RNA 65RNA 65RNA ## # ℹ 1,884 more variables: `A*01:09` &lt;chr&gt;, `A*01:10` &lt;chr&gt;, `A*01:12` &lt;chr&gt;, ## # `A*01:13` &lt;chr&gt;, `A*01:14` &lt;chr&gt;, `A*01:17` &lt;chr&gt;, `A*01:19` &lt;chr&gt;, ## # `A*01:20` &lt;chr&gt;, `A*01:21` &lt;chr&gt;, `A*01:23` &lt;chr&gt;, `A*01:24` &lt;chr&gt;, ## # `A*01:25` &lt;chr&gt;, `A*01:26` &lt;chr&gt;, `A*01:28` &lt;chr&gt;, `A*01:29` &lt;chr&gt;, ## # `A*01:30` &lt;chr&gt;, `A*01:32` &lt;chr&gt;, `A*01:33` &lt;chr&gt;, `A*01:35` &lt;chr&gt;, ## # `A*02:01` &lt;chr&gt;, `A*02:02` &lt;chr&gt;, `A*02:03` &lt;chr&gt;, `A*02:04` &lt;chr&gt;, ## # `A*02:05` &lt;chr&gt;, `A*02:06` &lt;chr&gt;, `A*02:07` &lt;chr&gt;, `A*02:08` &lt;chr&gt;, … dat_MHC1 &lt;-read.csv(&quot;doc/hla_bestanden/MHC_I_test.csv&quot;) re_MHC1 &lt;- CalEpletMHCI(dat_in = dat_MHC1, ver = 3) head(re_MHC1) ## $single_detail ## # A tibble: 72 × 6 ## # Rowwise: ## pair_id subject hla haplotype_id mm_eplets mm_cnt ## &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 101 subj1 A*02:01 1 &quot;&quot; 0 ## 2 101 subj1 A*01:01 2 &quot;44KM,76ANT,163RG,166DG,77NGT&quot; 5 ## 3 101 subj1 B*15:01 1 &quot;44RME,71TTS,156WA&quot; 3 ## 4 101 subj1 B*08:01 2 &quot;71TTS,156DA,177DT&quot; 3 ## 5 101 subj1 C*03:04 1 &quot;21H,73TVS,173K,219W,193PV,69RT,… 7 ## 6 101 subj1 C*07:01 2 &quot;&quot; 0 ## 7 103 subj2 A*03:01 1 &quot;62QE,144KR,161D,275EL&quot; 4 ## 8 103 subj2 A*02:01 2 &quot;&quot; 0 ## 9 103 subj2 B*07:02 1 &quot;65QIA,69AA,180E,156R,177DK,270L&quot; 6 ## 10 103 subj2 B*08:01 2 &quot;156DA,180E,177DT&quot; 3 ## # ℹ 62 more rows ## ## $overall_count ## # A tibble: 12 × 4 ## pair_id subject mm_cnt_tt mm_cnt_uniq ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 101 subj1 18 17 ## 2 103 subj2 27 19 ## 3 112 subj3 15 11 ## 4 134 subj4 14 12 ## 5 203 subj5 32 29 ## 6 211 subj6 20 17 ## 7 215 subj7 23 17 ## 8 216 subj8 28 15 ## 9 278 subj9 49 24 ## 10 298 subj10 12 12 ## 11 300 subj11 27 17 ## 12 301 subj12 31 24 conclusie CalEpletMHCI: subject: De naam of code van het individu waarop de eplets zijn berekend. mm_cnt_tt: Het totale aantal berekende eplets (mismatches) voor het individu. mm_cnt_uniq: Het aantal unieke eplets (unieke mismatches) voor het individu. Deze output geeft inzicht in de genetische variabiliteit binnen een populatie of dataset, specifiek gerelateerd aan de eplets van het major histocompatibility complex class I (MHCI). Hier zijn enkele mogelijke conclusies die uit deze gegevens kunnen worden getrokken: Genetische diversiteit: Individuen vertonen verschillende aantallen totale eplets (mm_cnt_tt) en unieke eplets (mm_cnt_uniq), wat wijst op variabiliteit in de genetische samenstelling van het MHCI. Immunologische relevantie: De aanwezigheid van unieke eplets suggereert dat elk individu mogelijk verschillende antigenen kan presenteren aan het immuunsysteem, wat belangrijk kan zijn voor immunologische processen zoals immuunresponsen en auto-immuunziekten. Klinische implicaties: Voor klinische toepassingen, zoals orgaantransplantaties of het ontwerpen van vaccins, kan het begrijpen van de diversiteit en unieke eplets van belang zijn. Dit kan helpen bij het matchen van donor-ontvangerparen of het ontwikkelen van gepersonaliseerde therapieën. Onderzoekspotentieel: De dataset kan dienen als basis voor verdere analyse naar correlaties tussen genetische variabiliteit, epletprofielen en klinische uitkomsten, wat nieuwe inzichten kan bieden in immunogenetica. 4.9 Calculate class II HLA eplet mismatch 4.10 CalEpletMHCII Deze functie wordt toegepast om eptlet-mismatches te berekenen op basis van MHC-II (Major Histocompatibility Complex Class II) gegevens. MHC-II moleculen spelen een cruciale rol bij de presentatie van antigenen aan CD4+ T-cellen in het immuunsysteem. ### CalEpletMHCII MHC_II_eplet_v3 &lt;- read.csv(&quot;doc/hla_bestanden/MHC_II_eplet_B_v3.csv&quot;) dat_MHCII &lt;-read.csv(&quot;doc/hla_bestanden/MHC_II_test.csv&quot;) re_MHCII &lt;- CalEpletMHCII(dat_in = dat_MHCII, ver = 3) head(re_MHCII) ## $single_detail ## # A tibble: 130 × 6 ## # Rowwise: ## pair_id subject hla haplotype_id mm_eplets mm_cnt ## &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 101 subj1 DPA1*02:01 1 &quot;50R,111R,127P&quot; 3 ## 2 101 subj1 DPA1*04:01 2 &quot;50R,127P,190A&quot; 3 ## 3 101 subj1 DPB1*31:01 1 &quot;35FA&quot; 1 ## 4 101 subj1 DPB1*02:01 2 &quot;69E,rp58E,rp67IE,qp67IE,84G,… 7 ## 5 101 subj1 DQA1*02:01 1 &quot;47KHL&quot; 1 ## 6 101 subj1 DQA1*05:02 2 &quot;&quot; 0 ## 7 101 subj1 DQB1*06:49 1 &quot;77T,87F,rqp37YA,rqp57D,rq77T… 6 ## 8 101 subj1 DQB1*04:02 2 &quot;56L,77T,rq75VT,rqp37YA,rqp57… 11 ## 9 101 subj1 DRB1*04:01 1 &quot;37YV,96Y,98E,rq37YV,37Y&quot; 5 ## 10 101 subj1 DRB1*08:01 2 &quot;16Y,37YV,57S,rq37YV,rq57S,37… 8 ## # ℹ 120 more rows ## ## $overall_count ## # A tibble: 12 × 4 ## pair_id subject mm_cnt_tt mm_cn_uniq ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 101 subj1 57 44 ## 2 103 subj2 111 63 ## 3 112 subj3 19 16 ## 4 134 subj4 14 13 ## 5 203 subj5 47 33 ## 6 211 subj6 45 38 ## 7 215 subj7 57 40 ## 8 216 subj8 37 31 ## 9 278 subj9 24 20 ## 10 298 subj10 28 25 ## 11 300 subj11 9 9 ## 12 301 subj12 32 29 ## ## $dqdr_risk ## pair_id DQ DR risk ## 1 101 12 12 interm ## 2 103 19 19 high ## 3 112 8 0 low ## 4 134 5 3 low ## 5 203 12 12 interm ## 6 211 11 10 interm ## 7 215 10 11 interm ## 8 216 6 8 interm ## 9 278 2 5 low ## 10 298 8 8 interm ## 11 300 5 3 low ## 12 301 14 7 interm DQ: Aantal eptlet-mismatches voor het HLA-DQ locus tussen de donor en ontvanger. DR: Aantal eptlet-mismatches voor het HLA-DR locus tussen de donor en ontvanger. risk: Het risiconiveau dat wordt geassocieerd met de mate van eptlet-mismatches tussen de donor en de ontvanger. De kolommen DQ en DR geven respectievelijk het aantal eptlet-mismatches weer voor de HLA-DQ en HLA-DR loci tussen de donor en de ontvanger. Het veld risk geeft aan welk risiconiveau wordt toegewezen aan het paar op basis van deze eptlet-mismatches. Het aantal eptlet-mismatches tussen donor en ontvanger kan helpen bij het voorspellen van de kans op afstoting na een transplantatie. Paar van HLA-allelen met pair_id nummer 103 heeft het grootste aantal eptlet-mismatches tussen donor en ontvanger dit betekent dat de kans op afstoting na een transplantatie groot is. 4.11 HLA-allelen normaliseren 4.12 CleanAllele Deze functie gebruikt ruwe, rommelige HLA-typegegevens (Human Leukocyte Antigen) als invoer. Het verwijdert inconsistente opmaak en onnodige symbolen. Als een van de twee allelen op een loci NA is, wordt aangenomen dat de locus homozygoot is ### CleanAllele re_CleanAllele &lt;- CleanAllele(DATA$recipient.b1, DATA$recipient.b2) head(re_CleanAllele) ## var_1 var_2 locus1_clean locus2_clean ## 1 B*18:01 B*40:01 18:01 40:01 ## 2 B*07:02 B*35:01 07:02 35:01 ## 3 B*08:01 B*44:02 08:01 44:02 ## 4 B*07:02 B*40:01 07:02 40:01 ## 5 B*08:01 B*57:01 08:01 57:01 ## 6 B*07:02 B*27:05 07:02 27:05 Conclusie_ CleanAllele: var_1 en var_2: Dit zijn karaktervariabelen die waarschijnlijk verschillende identificaties of kenmerken vertegenwoordigen. In de context van HLA-allelen zouden var_1 en var_2 de specifieke allelen kunnen aanduiden die worden vergeleken of geanalyseerd. locus1_clean en locus2_clean: Dit zijn schoongemaakte versies van de HLA-allelen uit var_1 en var_2, waarbij eventuele overbodige informatie zoals spaties of onnodige notaties zijn verwijderd. Ze vertegenwoordigen respectievelijk de gestandaardiseerde notaties van het eerste en het tweede HLA-allel. ar_1 en var_2: De oorspronkelijke HLA-allelen zoals gepresenteerd in de invoer. locus1_clean en locus2_clean: De gestandaardiseerde notaties van de HLA-allelen na het schoonmaken van onnodige informatie. AlleleMismCount: Het aantal mismatches tussen de HLA-alleelparen var_1 en var_2. De functie lijkt mismatches te tellen op basis van de gestandaardiseerde notaties van HLA-allelen. In dit geval is het aantal mismatches altijd 2, wat aangeeft dat er twee verschillen zijn tussen elk paar HLA-allelen (bijv. 18:01 versus 40:01) 4.13 Evaluate mismatched alleles 4.14 EvalAlleleMism Deze functie evalueert het aantal HLA-allel-mismatches tussen donors en ontvangers. De precieze werking hangt af van de implementatie van deze functie in de gebruikte R-pakketten of scripts. Hoewel ik de exacte code niet heb, kan ik een algemeen idee geven van hoe dergelijke functies meestal werken en hoe je de resulterende gegevens kunt gebruiken. ### EvalAlleleMism # Mismatch bij een homozygoot allel re_EvalAlleleMism1&lt;- EvalAlleleMism(DATA$donor.c1, DATA$donor.c2, DATA$recipient.c1, DATA$recipient.c2, hmz_cnt = 1) head(re_EvalAlleleMism1) ## don_1_clean don_2_clean recip_1_clean recip_2_clean mism_cnt ## 1 04:01 14:02 03:04 05:01 2 ## 2 04:01 07:02 04:01 07:02 0 ## 3 04:01 14:02 05:01 07:01 2 ## 4 03:04 04:01 03:04 07:02 1 ## 5 02:10 16:01 06:02 07:01 2 ## 6 04:01 08:02 01:02 07:02 2 # Stel hmz_cnt = 2 om homozygote mismatches als dubbel te tellen.(allellen c1, c2) re_EvalAlleleMism_c &lt;- EvalAlleleMism(DATA$donor.c1, DATA$donor.c2, DATA$recipient.c1, DATA$recipient.c2, hmz_cnt = 2) head(re_EvalAlleleMism_c) ## don_1_clean don_2_clean recip_1_clean recip_2_clean mism_cnt ## 1 04:01 14:02 03:04 05:01 2 ## 2 04:01 07:02 04:01 07:02 0 ## 3 04:01 14:02 05:01 07:01 2 ## 4 03:04 04:01 03:04 07:02 1 ## 5 02:10 16:01 06:02 07:01 2 ## 6 04:01 08:02 01:02 07:02 2 # kies mismach c library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union re_EvalAlleleMism_c &lt;- rename(re_EvalAlleleMism_c, mism.c = mism_cnt) # Stel hmz_cnt = 2 om homozygote mismatches als dubbel te tellen.(allelen drb11, drb12) re_EvalAlleleMism_drb &lt;- EvalAlleleMism(DATA$donor.drb11, DATA$donor.drb12, DATA$recipient.drb11, DATA$recipient.drb12, hmz_cnt = 2) head(re_EvalAlleleMism_drb) ## don_1_clean don_2_clean recip_1_clean recip_2_clean mism_cnt ## 1 101:01 101:02 104:04 103:01 0 ## 2 108:04 115:01 101:01 104:04 1 ## 3 101:02 114:01 104:01 103:01 1 ## 4 108:02 114:02 115:01 104:01 0 ## 5 101:02 112:01 107:01 113:01 0 ## 6 107:01 111:01 115:01 101:03 0 # kies mismach drb re_EvalAlleleMism_drb &lt;- rename(re_EvalAlleleMism_drb, mism.drb = mism_cnt) # Stel hmz_cnt = 2 om homozygote mismatches als dubbel te tellen.(allelen a1, a2) re_EvalAlleleMism_a &lt;- EvalAlleleMism(DATA$donor.a1, DATA$donor.a2, DATA$recipient.a1, DATA$recipient.a2, hmz_cnt = 2) head(re_EvalAlleleMism_a) ## don_1_clean don_2_clean recip_1_clean recip_2_clean mism_cnt ## 1 11:01 68:02 02:01 11:01 1 ## 2 02:01 33:03 03:01 26:01 2 ## 3 23:01 68:02 24:02 11:01 2 ## 4 31:01 31:01 68:01 29:02 2 ## 5 02:01 23:01 01:01 01:01 2 ## 6 33:01 36:01 03:01 25:01 2 # kies mismach a re_EvalAlleleMism_a &lt;- rename(re_EvalAlleleMism_a, mism.a = mism_cnt) # Stel hmz_cnt = 2 om homozygote mismatches als dubbel te tellen.(allelen b1,b2) re_EvalAlleleMism_b &lt;- EvalAlleleMism(DATA$donor.b1, DATA$donor.b2, DATA$recipient.b1, DATA$recipient.b2, hmz_cnt = 2) head(re_EvalAlleleMism_b) ## don_1_clean don_2_clean recip_1_clean recip_2_clean mism_cnt ## 1 15:16 35:01 18:01 40:01 2 ## 2 07:02 53:01 07:02 35:01 1 ## 3 15:16 50:02 08:01 44:02 2 ## 4 35:20 39:05 07:02 40:01 2 ## 5 15:03 45:01 08:01 57:01 2 ## 6 14:02 53:01 07:02 27:05 2 # kies mismach b re_EvalAlleleMism_b &lt;- rename(re_EvalAlleleMism_b, mism.b = mism_cnt) # voeg de mismaches HLA_MisMatch_count &lt;- c(re_EvalAlleleMism_a$mism.a, re_EvalAlleleMism_b$mism.b, re_EvalAlleleMism_c$mism.c, re_EvalAlleleMism_drb$mism.drb) # Matrix maken van de mismatch-gegevens. Hier geef ik ncol=4 aan omdat we vier kolommen hebben. HLA_MisMatch_count &lt;- matrix(c(re_EvalAlleleMism_a$mism.a, re_EvalAlleleMism_b$mism.b, re_EvalAlleleMism_c$mism.c, re_EvalAlleleMism_drb$mism.drb), ncol=4, byrow=FALSE) # De matrix omzetten naar een data frame (optioneel) df_HLA_MisMatch_count &lt;- as.data.frame(HLA_MisMatch_count) # Kolomnamen instellen colnames(df_HLA_MisMatch_count) &lt;- c(&quot;mism.a&quot;, &quot;mism.b&quot;, &quot;mism.c&quot;, &quot;mism.drb&quot;) # Resultaat bekijken head(df_HLA_MisMatch_count) ## mism.a mism.b mism.c mism.drb ## 1 1 2 2 0 ## 2 2 1 0 1 ## 3 2 2 2 1 ## 4 2 2 1 0 ## 5 2 2 2 0 ## 6 2 2 2 0 mism_cnt = 1: Aantal mismatches tussen dit donor-ontvanger paar. Deze output kan worden gebruikt om te beoordelen hoe compatibel donoren en ontvangers zijn op basis van HLA-allel-identiteit en -mismatches, wat cruciale informatie is in transplantatiegeneeskunde om afstoting te minimaliseren en het succes van transplantaties te verbeteren. 4.15 Count HLA mismatch at the allele level 4.16 CountAlleleMism Is ontworpen om het aantal allel-mismatches tussen twee sets van HLA-allelen te tellen. ### CountAlleleMism classI &lt;- CountAlleleMism(df_HLA_MisMatch_count, c(&quot;mism.a&quot;, &quot;mism.b&quot;)) classII &lt;- CountAlleleMism(df_HLA_MisMatch_count, c(&quot;mism.c&quot;, &quot;mism.drb&quot;)) head(classI) ## mism.a mism.b mism_total ## 1 1 2 2 ## 2 2 1 1 ## 3 2 2 2 ## 4 2 2 2 ## 5 2 2 2 ## 6 2 2 2 head(classII) ## mism.a mism.c mism.drb mism_total ## 1 1 2 0 2 ## 2 2 0 1 1 ## 3 2 2 1 3 ## 4 2 1 0 1 ## 5 2 2 0 2 ## 6 2 2 0 2 4.17 ImputeHaplo Wijs HLA-typering (Human Leukocyte Antigen) met lage of gemengde resolutie toe aan de meest waarschijnlijke hoge resolutie gelijkwaardig. Imputatie is rekenintensief, dus grote datasets kunnen vertragingen oplopen bij de verwerking. Deze functie maakt gebruik van gegevens van het NMDP (National Marrow Donor Program), en is momenteel beperkt tot HLA A-, B-, C- en DRB-loci. ### ImputeHaplo dat_imput &lt;- read.csv(&quot;doc/hla_bestanden/Haplotype_test.csv&quot;) colnames(dat_imput) ## [1] &quot;pair_id&quot; &quot;ethnicity&quot; &quot;subject_type&quot; &quot;a1&quot; &quot;a2&quot; ## [6] &quot;b1&quot; &quot;b2&quot; &quot;c1&quot; &quot;c2&quot; &quot;drb1&quot; ## [11] &quot;drb2&quot; &quot;dqb1&quot; &quot;dqb2&quot; &quot;drb31&quot; &quot;drb32&quot; ## [16] &quot;drb41&quot; &quot;drb42&quot; &quot;drb51&quot; &quot;drb52&quot; # Nu ImputeHaplo functie toepassen result &lt;- ImputeHaplo(dat_in = dat_imput) ## Warning in ImputeHaplo(dat_in = dat_imput): ## Please use this imputation function with caution; its accuracy is lower than the current publicly available gold standard (HaploStats) and may produce inaccurate results. ## Work is underway on a collaboration to improve the accuracy of this function. ## | | | 0% | |==== | 5% | |======= | 10% | |========== | 15% | |============== | 20% | |================== | 25% | |===================== | 30% | |======================== | 35% | |============================ | 40% | |================================ | 45% | |=================================== | 50% | |====================================== | 55% | |========================================== | 60% | |============================================== | 65% | |================================================= | 70% | |==================================================== | 75% | |======================================================== | 80% | |============================================================ | 85% | |=============================================================== | 90% | |================================================================== | 95% | |======================================================================| 100% head(result) ## subj dat_type pair_id a b c drb1 dqb1 drb345 ## 1 101_rcpt_cau raw 101 02/03 07/49 07/07 11/15 03/06 ///// ## 2 101_rcpt_cau imputed 101 03:01 07:02 07:02 15:01 06:02 DRB5*01:01 ## 3 101_rcpt_cau imputed 101 02:01 49:01 07:01 11:01 03:01 DRB3*02:02 ## 4 101_don_cau raw 101 01/02 08/15 03/07 03/04 20/03 01/01/10/10// ## 5 101_don_cau imputed 101 02:01 15:01 03:04 04:01 03:02 DRB4*01:01 ## 6 101_don_cau imputed 101 01:01 08:01 07:01 03:01 03:02 DRB3*01:01 ## freq rank lores_all_match ## 1 ## 2 0.0297 2 yes ## 3 3e-04 437 yes ## 4 ## 5 0.0084 7 no ## 6 1e-04 8054 no "],["de-organisatie-van-daur2-cursus-bestanden-met-het-guerrilla-analytics.html", "5 De organisatie van DAUR2 cursus bestanden met het guerrilla-analytics", " 5 De organisatie van DAUR2 cursus bestanden met het guerrilla-analytics fs::dir_tree(&quot;C:/Users/Maria/Downloads/DSFB2/DAUR2&quot;) ## C:/Users/Maria/Downloads/DSFB2/DAUR2 ## ├── Gurella.Rmd ## ├── Gurella_tree.png ## ├── Metagenomics ## │ ├── Data ## │ │ ├── Bracken_data ## │ │ │ ├── mock1.bracken ## │ │ │ ├── mock1.report ## │ │ │ ├── mock1_bracken_species.biom ## │ │ │ └── mock1_bracken_species.report ## │ │ ├── HU_waternet_MOCK1_composition.csv ## │ │ └── README.txt ## │ ├── README.txt ## │ ├── Resultaten ## │ │ └── metagenomics_mock1.html ## │ └── script ## │ └── metagenomics_mock1.Rmd ## └── RNAseq ## ├── Eindopdracht_RNAseq ## │ ├── Data ## │ │ ├── onecut_sampledata_OC3.csv ## │ │ ├── README.txt ## │ │ └── read_counts.rds ## │ ├── Resultaten ## │ │ └── Eindopdracht.html ## │ └── script ## │ └── Eindopdracht.Rmd ## └── Formatieveopdracht_RNAseq ## ├── Data ## │ ├── ipsc_sampledata.csv ## │ ├── README.txt ## │ └── read_counts.rds ## ├── Resultaten ## │ └── F_opdracht_les5-.html ## └── script ## └── F_opdracht_les5-.Rmd knitr::include_graphics(&quot;images/Gruerrilla_tree.png&quot;) "],["data-analyse-afgeleid-van-een-experiment-op-volwassen-c.elegans-nematoden.html", "6 Data analyse afgeleid van een experiment op volwassen C.elegans nematoden 6.1 Bestand van de ruwe data importeren en inspecteren 6.2 De data visualiseren in een spreidingsdiagram met ggplot2", " 6 Data analyse afgeleid van een experiment op volwassen C.elegans nematoden In dit experiment werden de volwassen C.elegans nematoden blootgesteld aan variërende concentraties van verschillende verbindingen. Het doel van de data en gegevens analyse is het uitvoeren van een dosis-responsanalyse met behulp van een log-logistisch model met schattingen voor het maximale, het minimale, de IC50-concentratie en de helling bij IC50. # Benodigde packages voor dit data analyse opdracht library(RColorBrewer) library(reactable) library(here) library(tidyverse) library(readxl) library(DT) library(ggplot2) library(dplyr) library(scales) 6.1 Bestand van de ruwe data importeren en inspecteren # Lees het Excel-bestand in c_elegans_data &lt;- readxl::read_excel(here::here(&quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) # Data inspectie head(c_elegans_data) ## # A tibble: 6 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;chr&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, ## # bacterialVolUnit &lt;chr&gt;, incubationVial &lt;chr&gt;, incubationVolume &lt;dbl&gt;, … # De data laden in dataframe head(data.frame(c_elegans_data)) ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## expDate expResearcher expTime expUnit expVolumeCounted ## 1 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## 2 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## 3 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## 4 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## 5 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## 6 2020-11-30 Sergio Reijnders - Ellis Herder 68 hour 50 ## RawData compCASRN compName compConcentration compUnit ## 1 44 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## 2 37 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## 3 45 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## 4 47 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## 5 41 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## 6 35 24157-81-1 2,6-diisopropylnaphthalene 4.99 nM ## compDelivery compVehicle elegansStrain elegansInput bacterialStrain ## 1 Liquid controlVehicleA N2 25 OP50 ## 2 Liquid controlVehicleA N2 25 OP50 ## 3 Liquid controlVehicleA N2 25 OP50 ## 4 Liquid controlVehicleA N2 25 OP50 ## 5 Liquid controlVehicleA N2 25 OP50 ## 6 Liquid controlVehicleA N2 25 OP50 ## bacterialTreatment bacterialOD600 bacterialConcX bacterialVolume ## 1 heated 0.743 8 300 ## 2 heated 0.743 8 300 ## 3 heated 0.743 8 300 ## 4 heated 0.743 8 300 ## 5 heated 0.743 8 300 ## 6 heated 0.743 8 300 ## bacterialVolUnit incubationVial incubationVolume incubationUnit ## 1 ul 1,5 glass vial 1000 ul ## 2 ul 1,5 glass vial 1000 ul ## 3 ul 1,5 glass vial 1000 ul ## 4 ul 1,5 glass vial 1000 ul ## 5 ul 1,5 glass vial 1000 ul ## 6 ul 1,5 glass vial 1000 ul ## incubationMethod incubationRPM bubble incubateTemperature ## 1 rockroll 35 NA 20 ## 2 rockroll 35 NA 20 ## 3 rockroll 35 NA 20 ## 4 rockroll 35 NA 20 ## 5 rockroll 35 NA 20 ## 6 rockroll 35 NA 20 6.2 De data visualiseren in een spreidingsdiagram met ggplot2 ggplot(data = c_elegans_data, aes(x = compConcentration, y = RawData)) + geom_point(aes(color = compName, shape = expType), size = 1.5, alpha = 0.5) + labs(labs(title = &quot;Het effect van de verschillende stoffen op de hoeveelheid levende C_ elegans&quot;, x = &quot;compound concnetratie&quot;, y = &quot;aantal nakomelingen&quot; )) De compConcentration variable is als character datat bestand, daarom is het handig voor de data visualisatie om naar numeric te veranderen. # componCentration van character naar numeric variable c_elegans_data$compConcentration &lt;- as.numeric(c_elegans_data$compConcentration) # De plot leesbaarder maken door de data te normaliseren door de Log10 van compConcentrion te nemen en geom_jitter toevoegen. install.packages(&quot;scales&quot;) library(scales) library(tidyverse) c_elegans_data_grafiek &lt;- as_tibble(c_elegans_data) %&gt;% ggplot(aes(x = compConcentration, y = RawData, shape = expType, colour = compName)) + geom_point(position = position_jitter(w = 0.02, h = 0)) + scale_x_continuous(trans = log10_trans()) + labs(title = &quot;Het effect van de verschillende stoffen op de hoeveelheid levende C_ elegans&quot;, x = &quot;compound concnetratie&quot;, y = &quot;aantal nakomelingen&quot; ) print(c_elegans_data_grafiek) De positieve controle voor dit experiment iEthanol. De negatieve controle voor dit experiment is S-medium. Om erachter te komen of er inderdaad een effect is van verschillende concentraties op het aantal nakomelingen en of de verschillende verbindingen een verschillende curve hebben (IC50) kan de volgende stappenplan uitvoeren: 1- Data downloaden en tidy maken en het verzamelen van de concentraties van de compounds en het aantal nakomelingen voor elk monster onder elke concentratie. 2- Normaliteit checken met Shapio-Wilk test. 3- De data plotten. 4- Lineaire regressie: om te onderzoeken of er een lineair verband is tussen de concentraties van de verbindingen en het aantal nakomelingen. 2- ANOVA: om twee groepen te vergelijken bijvoorbeeld verschillende concentraties van verschillende verbindingen en voor het testen of er een significant verschil is tussen de gemiddelde aantallen nakomelingen kan ANOVA uitvoeren. 3- Estimatie van IC50-waarden: Voor het schatten van IC50-waarden kan een dosis-responsmodel passen, zoals een logistische regressie.Pas een logistisch regressiemodel toe ogistic_model &lt;- glm(response ~ concentratie, family = binomial, data = dataset) Bereken de IC50-waarde IC50_value &lt;- predict(logistic_model, type = “response”, newdata = data.frame(concentratie = 50)) # Negatieve controle filteren data_negatieve_controle &lt;- c_elegans_data %&gt;% filter(c_elegans_data$expType == &quot;controlNegative&quot;) # Negative controle mean gem_N_control &lt;- mean(data_negatieve_controle$RawData, na.rm = TRUE) # summary summary_c_elegans &lt;- c_elegans_data %&gt;% group_by(expType, compName, compConcentration) %&gt;% summarize(mean = mean(RawData, na.rm = TRUE)) # kolom van de genormalizeerde data toevoegen data_normalizeren &lt;- summary_c_elegans %&gt;% mutate(RawData_normalized = mean / gem_N_control) # Plotten ggplot(data = data_normalizeren, aes(x = log10(compConcentration), y = RawData_normalized)) + geom_jitter(aes(color = compName, shape = compName),width = 0.09)+ labs(title = &quot;Gemiddelde aantal nakomelingen per compound concentratie&quot;, subtitle = &quot;De concentratie is genormaliseerd door de negatieve controle&quot;, x = &quot;log10 compound Concentratie&quot;, y = &quot;Gemiddelde aantal nakomelingen&quot; ) "],["identifying-reproducibility.html", "7 Identifying reproducibility 7.1 Voor dit opdracht wordt er een artikel gekozen van SPANDIDOS PUBLICATIONS website.", " 7 Identifying reproducibility 7.1 Voor dit opdracht wordt er een artikel gekozen van SPANDIDOS PUBLICATIONS website. Reproduceerbaarheid houdt in dat onderzoeksgegevens en code openbaar worden gemaakt, waardoor anderen dezelfde resultaten kunnen behalen als die worden gerapporteerd in wetenschappelijke publicaties. Gerelateerd hieraan is het begrip repliceerbaarheid, wat inhoudt dat wetenschappelijke methoden worden herhaald om vergelijkbare conclusies te verkrijgen. In dit review wordt de reproduceerbaarheid geidentificeerd van een wetenschappelijke onderzoek die op BioRxiv online platform wordt gepubliceerd. link naar het artikel Om de reproduceerbaarheid van artikel “Mutagenicity of folic acid deficiency and supplementation is tissue-specific and results in distinct mutation profiles” te evalueren worden er specifieke criteria gebruikt onder andere, het doel van de studie, de beschikbaarheid van de data. 7.1.1 Reference voor het artikel: Mutagenicity of folic acid deficiency and supplementation is tissue-specific and results in distinct mutation profiles. (z.d.). Geraadpleegd op 30 april 2024, van https://www.biorxiv.org/content/10.1101/2020.07.27.223552v1.full 7.1.2 De criteria voor reproduciblity Transparency Criteria Definition Response Type Study Purpose A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the study objective. Existing Data Availability Statement A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section. existing Data Location Where the article’s data can be accessed, either raw or processed. NCBI Sequence Read Archive. Study Location Author has stated in the methods section where the study took place or the data’s country/region of origin. Canada Author Review The professionalism of the contact information that the author has provided in the manuscript. Yes,Author contributions Ethics Statement A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data. existing Funding Statement A statement within the manuscript indicating whether or not the authors received funding for their research. Not existing Code Availability Authors have shared access to the most updated code that they used in their study, including code used for analysis. Not existing 7.1.3 Overview Doel het doel van het onderzoek waarop dit artikel gebaseerd is de associatie tussen folaatdeficiëntie met een verhoogd risico op colorectale kanker (CRC) en acute lymfatische leukemie, terwijl een hoge inname van foliumzuur (FA) juist wordt gekoppeld aan een hoger risico op CRC. Methode Het mutagene potentieel van FA-inname in verschillende weefsels is echter nog niet grondig onderzocht. In dit onderzoek worden de mutaties geanalyseerd in folaatgevoelige somatische weefsels, zoals het beenmerg en de dikke darm, van dezelfde MutaMouse-muizen. Vervolgens wordt FA-geïnduceerde mutatieprofielen van beide weefsels bepaald door middel van next generation sequencing. Resultaten Een tekort aan FA verhoogde de frequentie van mutanten in het beenmerg, terwijl supplementation met foliumzuur de frequentie van mutanten in de dikke darm verhoogde. Analyse van de mutatieprofielen suggereerde dat FA interageerde met mutagene mechanismen die uniek zijn voor elk weefsel. Deze gegevens werpen licht op potentiële mechanismen die verschillen in gevoeligheid voor FA-gerelateerde kankers kunnen verklaren. Figuur1: Bone marrow and colon folic acid (FA)-induced lacZ MF "],["reproducibility-study-on-covid-19-vaccine-survey-paper-r-code-paper..html", "8 Reproducibility Study on COVID-19 Vaccine Survey Paper (R code paper). 8.1 Doel van de code 8.2 Code beoordeling 8.3 Errors and Fixes 8.4 Effort to Reproduce Visualization", " 8 Reproducibility Study on COVID-19 Vaccine Survey Paper (R code paper). Hier wordt de reproducibility van deze paper beoordeeld. paper: A global survey of potential acceptance of a COVID-19 vaccine Link naar het artikel 8.1 Doel van de code De gegeven code is bedoeld om een dataset te analyseren die verband houdt met een COVID-19-vaccinonderzoek. Het cleans en bewerkt de data, genereer visualisaties om de verdeling van de antwoorden weer te geven op basis van geslacht, leeftijd, inkomen, opleiding en land. Voer logistische regressie uit om factoren te analyseren die van invloed zijn op de waarschijnlijkheid dat de aanbeveling van de werkgever om zich te laten vaccineren wordt opgevolgd en op de waarschijnlijkheid dat een bewezen veilig en effectief vaccin wordt gebruikt. Samenvattende tabellen maken voor beschrijvende statistieken. 8.2 Code beoordeling De leesbaarheid van de code kan als volgt worden beoordeeld: Naamgeving en opmerkingen van variabelen: 4 (de meeste variabelen hebben een goede naam, hoewel een variabelnaam in de data was anders dan in de code) Structuur en organisatie: 4 (de code is logisch gestructureerd, maar sommige delen kunnen worden gemodulariseerd voor meer duidelijkheid) Gebruik van bibliotheken en functies: 4 (de juiste libraries worden effectief gebruikt, er moest ook extra libraries toegevoegd worden). Overall readability: 4 (Good) 8.3 Errors and Fixes Het originele script geen grote fouten bevatte, maar wel enkele aanpassingen voor path en de variabel naam in het originele code “casesperm” aanpassen naar “covidcases” dus kleine aanpassingen vereiste. 8.4 Effort to Reproduce Visualization Effort required: 2 (Easy) Het proces van het reproduceren van de visualisatie was relatief eenvoudig. Er waren kleine aanpassingen aan de bestandspaden en coderingsinstellingen nodig, maar over het algemeen verliep de code soepel. 8.4.1 code toepassing 8.4.1.1 Data Loading and Preparation 8.4.1.2 Visualizations Gender vs. Business Response #Question:I would follow my employer’s recommendation to get a COVID-19 vaccine once the government has approved it as safe and effective. ## Completely disagree Somewhat disagree Neutral/no opinion Somewhat agree ## 1179 2299 3488 4579 ## Completely agree ## 1881 8.4.1.3 Country vs. Vaccine Response Question:If a COVID-19 vaccine is proven safe and effective and is available to me, I will take it. ## Completely disagree Somewhat disagree Neutral/no opinion Somewhat agree ## 1091 819 1912 3318 ## Completely agree ## 6286 8.4.1.4 Logistic Regression Analysis ## ## Call: ## glm(formula = biz_reg ~ educ_fact, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.24137 0.03255 -7.415 1.22e-13 *** ## educ_factHigh school some college 0.22944 0.04373 5.247 1.55e-07 *** ## educ_factBachelor 0.21647 0.04629 4.676 2.92e-06 *** ## educ_factPost Graduate 0.27021 0.06673 4.049 5.14e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18549 on 13394 degrees of freedom ## Residual deviance: 18513 on 13391 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 18521 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 0.7855478 0.7369295 0.8372369 ## educ_factHigh school some college 1.2578937 1.1546207 1.3705237 ## educ_factBachelor 1.2416827 1.1340265 1.3596568 ## educ_factPost Graduate 1.3102448 1.1496353 1.4934216 ## ## Call: ## glm(formula = biz_reg ~ ww_fct, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.31121 0.09574 -3.250 0.00115 ** ## ww_fct$2-$8 per day -0.09922 0.11888 -0.835 0.40395 ## ww_fct$8-$32 per day 0.03515 0.10257 0.343 0.73187 ## ww_fct$32+ 0.38609 0.09818 3.933 8.4e-05 *** ## ww_fctRefused -0.24903 0.12660 -1.967 0.04918 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18593 on 13425 degrees of freedom ## Residual deviance: 18451 on 13421 degrees of freedom ## AIC: 18461 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 0.7325581 0.6065818 0.8830920 ## ww_fct$2-$8 per day 0.9055477 0.7175302 1.1436626 ## ww_fct$8-$32 per day 1.0357699 0.8476987 1.2675333 ## ww_fct$32+ 1.4712151 1.2145868 1.7851499 ## ww_fctRefused 0.7795590 0.6082024 0.9992052 ## ## Call: ## glm(formula = biz_reg ~ Gender_r, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.04351 0.02362 -1.842 0.0655 . ## Gender_rMale -0.06788 0.03482 -1.949 0.0513 . ## Gender_rOther -0.38862 0.21242 -1.830 0.0673 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18549 on 13394 degrees of freedom ## Residual deviance: 18543 on 13392 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 18549 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 0.9574236 0.9140984 1.002787 ## Gender_rMale 0.9343727 0.8727181 1.000365 ## Gender_rOther 0.6779892 0.4437462 1.023462 ## ## Call: ## glm(formula = biz_reg ~ agegroup_fct, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.22949 0.04439 -5.170 2.34e-07 *** ## agegroup_fct25-54 0.19504 0.04949 3.941 8.11e-05 *** ## agegroup_fct55-64 0.15310 0.06822 2.244 0.0248 * ## agegroup_fct65+ 0.12029 0.06835 1.760 0.0784 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18549 on 13394 degrees of freedom ## Residual deviance: 18533 on 13391 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 18541 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 0.7949389 0.7285878 0.8670821 ## agegroup_fct25-54 1.2153557 1.1031284 1.3393090 ## agegroup_fct55-64 1.1654375 1.0195955 1.3322025 ## agegroup_fct65+ 1.1278247 0.9864098 1.2895293 ## ## Call: ## glm(formula = biz_reg ~ sick_reg, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.07712 0.01861 -4.145 3.4e-05 *** ## sick_reg 0.01237 0.05006 0.247 0.805 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18593 on 13425 degrees of freedom ## Residual deviance: 18593 on 13424 degrees of freedom ## AIC: 18597 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 0.925778 0.8926175 0.960154 ## sick_reg 1.012450 0.9177857 1.116795 ## ## Call: ## glm(formula = biz_reg ~ covidcases, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -6.447e-02 2.024e-02 -3.186 0.00144 ** ## covidcases -3.536e-08 3.412e-08 -1.036 0.29998 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18593 on 13425 degrees of freedom ## Residual deviance: 18592 on 13424 degrees of freedom ## AIC: 18596 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 0.9375602 0.9010938 0.9754905 ## covidcases 1.0000000 0.9999999 1.0000000 ## ## Call: ## glm(formula = biz_reg ~ mortalityperm, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 9.383e-02 2.489e-02 3.771 0.000163 *** ## mortalityperm -7.526e-04 7.986e-05 -9.424 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18593 on 13425 degrees of freedom ## Residual deviance: 18504 on 13424 degrees of freedom ## AIC: 18508 ## ## Number of Fisher Scoring iterations: 3 ## 2.5 % 97.5 % ## (Intercept) 1.0983768 1.0461005 1.153293 ## mortalityperm 0.9992477 0.9990912 0.999404 ## ## Call: ## glm(formula = biz_reg ~ trusthealth, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.11093 0.03560 -31.21 &lt;2e-16 *** ## trusthealth 1.46964 0.04143 35.47 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 18593 on 13425 degrees of freedom ## Residual deviance: 17192 on 13424 degrees of freedom ## AIC: 17196 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 0.329253 0.306936 0.352903 ## trusthealth 4.347664 4.009819 4.716956 #regression ## ## Call: ## glm(formula = vacc2_reg ~ educ_fact, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.72940 0.03449 21.148 &lt; 2e-16 *** ## educ_factHigh school some college 0.23498 0.04750 4.947 7.53e-07 *** ## educ_factBachelor 0.28923 0.05078 5.696 1.23e-08 *** ## educ_factPost Graduate 0.37261 0.07564 4.926 8.38e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16005 on 13394 degrees of freedom ## Residual deviance: 15959 on 13391 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 15967 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.073836 1.938783 2.219479 ## educ_factHigh school some college 1.264886 1.152443 1.388312 ## educ_factBachelor 1.335394 1.209004 1.475298 ## educ_factPost Graduate 1.451515 1.252847 1.685387 ## ## Call: ## glm(formula = vacc2_reg ~ ww_fct, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.28377 0.09555 2.970 0.00298 ** ## ww_fct$2-$8 per day 0.31961 0.11974 2.669 0.00761 ** ## ww_fct$8-$32 per day 0.62649 0.10370 6.042 1.53e-09 *** ## ww_fct$32+ 0.77846 0.09872 7.885 3.14e-15 *** ## ww_fctRefused -0.09912 0.12463 -0.795 0.42645 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16039 on 13425 degrees of freedom ## Residual deviance: 15864 on 13421 degrees of freedom ## AIC: 15874 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 1.3281250 1.102059 1.603210 ## ww_fct$2-$8 per day 1.3765894 1.088341 1.740585 ## ww_fct$8-$32 per day 1.8710240 1.525768 2.291495 ## ww_fct$32+ 2.1781143 1.793335 2.641425 ## ww_fctRefused 0.9056355 0.709063 1.155941 ## ## Call: ## glm(formula = vacc2_reg ~ Gender_r, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.01412 0.02672 37.957 &lt; 2e-16 *** ## Gender_rMale -0.17404 0.03858 -4.511 6.45e-06 *** ## Gender_rOther -1.49105 0.21385 -6.972 3.12e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16005 on 13394 degrees of freedom ## Residual deviance: 15940 on 13392 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 15946 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.7569408 2.6168378 2.9057887 ## Gender_rMale 0.8402641 0.7790644 0.9062713 ## Gender_rOther 0.2251371 0.1468455 0.3405870 ## ## Call: ## glm(formula = vacc2_reg ~ agegroup_fct, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.77449 0.04745 16.324 &lt; 2e-16 *** ## agegroup_fct25-54 0.11185 0.05320 2.103 0.0355 * ## agegroup_fct55-64 0.18343 0.07479 2.453 0.0142 * ## agegroup_fct65+ 0.54982 0.07943 6.922 4.44e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16005 on 13394 degrees of freedom ## Residual deviance: 15950 on 13391 degrees of freedom ## (31 observations deleted due to missingness) ## AIC: 15958 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.169492 1.977863 2.382223 ## agegroup_fct25-54 1.118340 1.007203 1.240767 ## agegroup_fct55-64 1.201332 1.037878 1.391520 ## agegroup_fct65+ 1.732948 1.484222 2.026518 ## ## Call: ## glm(formula = vacc2_reg ~ sick_reg, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.92490 0.02062 44.864 &lt;2e-16 *** ## sick_reg -0.02516 0.05522 -0.456 0.649 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16039 on 13425 degrees of freedom ## Residual deviance: 16039 on 13424 degrees of freedom ## AIC: 16043 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.5216068 2.4220314 2.625894 ## sick_reg 0.9751541 0.8756257 1.087288 ## ## Call: ## glm(formula = vacc2_reg ~ covidcases, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 8.855e-01 2.241e-02 39.516 &lt; 2e-16 *** ## covidcases 1.185e-07 3.944e-08 3.005 0.00266 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16039 on 13425 degrees of freedom ## Residual deviance: 16030 on 13424 degrees of freedom ## AIC: 16034 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.42426 2.320307 2.533359 ## covidcases 1.00000 1.000000 1.000000 ## ## Call: ## glm(formula = vacc2_reg ~ mortalityperm, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 9.539e-01 2.766e-02 34.480 &lt;2e-16 *** ## mortalityperm -1.428e-04 8.737e-05 -1.635 0.102 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16039 on 13425 degrees of freedom ## Residual deviance: 16036 on 13424 degrees of freedom ## AIC: 16040 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 2.5957471 2.4591827 2.740873 ## mortalityperm 0.9998572 0.9996862 1.000029 ## ## Call: ## glm(formula = vacc2_reg ~ trusthealth, family = binomial(link = &quot;logit&quot;), ## data = data) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.58213 0.03204 18.17 &lt;2e-16 *** ## trusthealth 0.51285 0.04008 12.80 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 16039 on 13425 degrees of freedom ## Residual deviance: 15877 on 13424 degrees of freedom ## AIC: 15881 ## ## Number of Fisher Scoring iterations: 4 ## 2.5 % 97.5 % ## (Intercept) 1.789855 1.681205 1.906237 ## trusthealth 1.670051 1.543807 1.806430 #Table ## ## Overall ## n 13426 ## Gender_r (%) ## Female 7172 (53.5) ## Male 6129 (45.8) ## Other 94 ( 0.7) ## ww_fct (%) ## &lt;$2 per day 447 ( 3.3) ## $2-$8 per day 840 ( 6.3) ## $8-$32 per day 3011 (22.4) ## $32+ 8498 (63.3) ## Refused 630 ( 4.7) ## educ_fact (%) ## Less than high school 3830 (28.6) ## High school some college 4692 (35.0) ## Bachelor 3694 (27.6) ## Post Graduate 1179 ( 8.8) ## agegroup_fct (%) ## 18-24 2057 (15.4) ## 25-54 8360 (62.4) ## 55-64 1493 (11.1) ## 65+ 1485 (11.1) ## Business2 (%) ## 1 1179 ( 8.8) ## 2 2299 (17.1) ## 3 3488 (26.0) ## 4 4579 (34.1) ## 5 1881 (14.0) ## Vaccine (%) ## 1 1091 ( 8.1) ## 2 819 ( 6.1) ## 3 1912 (14.2) ## 4 3318 (24.7) ## 5 6286 (46.8) ## Stratified by country_name ## Brazil Canada China Ecuador ## n 717 707 712 741 ## Gender_r (%) ## Female 436 (60.9) 392 (55.6) 351 (49.4) 407 (55.0) ## Male 276 (38.5) 307 (43.5) 360 (50.6) 323 (43.6) ## Other 4 ( 0.6) 6 ( 0.9) 0 ( 0.0) 10 ( 1.4) ## ww_fct (%) ## &lt;$2 per day 20 ( 2.8) 22 ( 3.1) 2 ( 0.3) 30 ( 4.0) ## $2-$8 per day 89 (12.4) 9 ( 1.3) 3 ( 0.4) 92 (12.4) ## $8-$32 per day 334 (46.6) 56 ( 7.9) 69 ( 9.7) 344 (46.4) ## $32+ 238 (33.2) 567 (80.2) 633 (88.9) 225 (30.4) ## Refused 36 ( 5.0) 53 ( 7.5) 5 ( 0.7) 50 ( 6.7) ## educ_fact (%) ## Less than high school 176 (24.6) 204 (28.9) 236 (33.2) 371 (50.1) ## High school some college 272 (38.0) 380 (53.9) 436 (61.3) 276 (37.3) ## Bachelor 232 (32.4) 97 (13.8) 33 ( 4.6) 77 (10.4) ## Post Graduate 36 ( 5.0) 24 ( 3.4) 6 ( 0.8) 16 ( 2.2) ## agegroup_fct (%) ## 18-24 171 (23.9) 102 (14.5) 85 (12.0) 224 (30.3) ## 25-54 412 (57.5) 428 (60.7) 450 (63.3) 425 (57.4) ## 55-64 57 ( 8.0) 86 (12.2) 62 ( 8.7) 58 ( 7.8) ## 65+ 76 (10.6) 89 (12.6) 114 (16.0) 33 ( 4.5) ## Business2 (%) ## 1 95 (13.2) 33 ( 4.7) 3 ( 0.4) 155 (20.9) ## 2 206 (28.7) 89 (12.6) 23 ( 3.2) 193 (26.0) ## 3 158 (22.0) 227 (32.1) 90 (12.6) 192 (25.9) ## 4 190 (26.5) 280 (39.6) 290 (40.7) 153 (20.6) ## 5 68 ( 9.5) 78 (11.0) 306 (43.0) 48 ( 6.5) ## Vaccine (%) ## 1 19 ( 2.6) 60 ( 8.5) 0 ( 0.0) 74 (10.0) ## 2 29 ( 4.0) 55 ( 7.8) 5 ( 0.7) 40 ( 5.4) ## 3 57 ( 7.9) 106 (15.0) 76 (10.7) 94 (12.7) ## 4 131 (18.3) 145 (20.5) 218 (30.6) 150 (20.2) ## 5 481 (67.1) 341 (48.2) 413 (58.0) 383 (51.7) ## Stratified by country_name ## France Germany India Italy ## n 669 722 742 736 ## Gender_r (%) ## Female 333 (49.8) 417 (58.2) 485 (66.1) 412 (56.0) ## Male 334 (49.9) 298 (41.6) 243 (33.1) 323 (43.9) ## Other 2 ( 0.3) 2 ( 0.3) 6 ( 0.8) 1 ( 0.1) ## ww_fct (%) ## &lt;$2 per day 8 ( 1.2) 2 ( 0.3) 39 ( 5.3) 4 ( 0.5) ## $2-$8 per day 5 ( 0.7) 5 ( 0.7) 172 (23.2) 2 ( 0.3) ## $8-$32 per day 48 ( 7.2) 51 ( 7.1) 360 (48.5) 44 ( 6.0) ## $32+ 561 (83.9) 634 (87.8) 163 (22.0) 651 (88.5) ## Refused 47 ( 7.0) 30 ( 4.2) 8 ( 1.1) 35 ( 4.8) ## educ_fact (%) ## Less than high school 407 (60.8) 338 (47.1) 126 (17.2) 115 (15.6) ## High school some college 134 (20.0) 133 (18.5) 429 (58.4) 378 (51.4) ## Bachelor 105 (15.7) 118 (16.5) 163 (22.2) 107 (14.5) ## Post Graduate 23 ( 3.4) 128 (17.9) 16 ( 2.2) 136 (18.5) ## agegroup_fct (%) ## 18-24 105 (15.7) 84 (11.7) 58 ( 7.9) 111 (15.1) ## 25-54 381 (57.0) 403 (56.2) 599 (81.6) 457 (62.1) ## 55-64 77 (11.5) 117 (16.3) 48 ( 6.5) 94 (12.8) ## 65+ 106 (15.8) 113 (15.8) 29 ( 4.0) 74 (10.1) ## Business2 (%) ## 1 49 ( 7.3) 32 ( 4.4) 59 ( 8.0) 46 ( 6.2) ## 2 135 (20.2) 92 (12.7) 84 (11.3) 115 (15.6) ## 3 197 (29.4) 209 (28.9) 125 (16.8) 220 (29.9) ## 4 239 (35.7) 271 (37.5) 290 (39.1) 300 (40.8) ## 5 49 ( 7.3) 118 (16.3) 184 (24.8) 55 ( 7.5) ## Vaccine (%) ## 1 74 (11.1) 74 (10.2) 42 ( 5.7) 55 ( 7.5) ## 2 49 ( 7.3) 43 ( 6.0) 42 ( 5.7) 51 ( 6.9) ## 3 152 (22.7) 111 (15.4) 105 (14.2) 109 (14.8) ## 4 192 (28.7) 167 (23.1) 224 (30.2) 198 (26.9) ## 5 202 (30.2) 327 (45.3) 329 (44.3) 323 (43.9) ## Stratified by country_name ## Mexico Nigeria Poland Russia ## n 699 670 666 680 ## Gender_r (%) ## Female 364 (52.1) 373 (55.7) 302 (45.5) 346 (50.9) ## Male 332 (47.6) 275 (41.0) 362 (54.5) 328 (48.2) ## Other 2 ( 0.3) 22 ( 3.3) 0 ( 0.0) 6 ( 0.9) ## ww_fct (%) ## &lt;$2 per day 15 ( 2.1) 195 (29.1) 13 ( 2.0) 24 ( 3.5) ## $2-$8 per day 88 (12.6) 225 (33.6) 5 ( 0.8) 42 ( 6.2) ## $8-$32 per day 306 (43.8) 175 (26.1) 316 (47.4) 340 (50.0) ## $32+ 263 (37.6) 30 ( 4.5) 286 (42.9) 256 (37.6) ## Refused 27 ( 3.9) 45 ( 6.7) 46 ( 6.9) 18 ( 2.6) ## educ_fact (%) ## Less than high school 207 (29.7) 249 (37.2) 61 ( 9.2) 67 ( 9.9) ## High school some college 413 (59.2) 325 (48.5) 295 (44.4) 157 (23.1) ## Bachelor 66 ( 9.5) 82 (12.2) 308 (46.4) 405 (59.6) ## Post Graduate 12 ( 1.7) 14 ( 2.1) 0 ( 0.0) 51 ( 7.5) ## agegroup_fct (%) ## 18-24 134 (19.2) 203 (30.3) 84 (12.7) 76 (11.2) ## 25-54 416 (59.6) 439 (65.5) 382 (57.5) 441 (64.9) ## 55-64 69 ( 9.9) 28 ( 4.2) 95 (14.3) 86 (12.6) ## 65+ 79 (11.3) 0 ( 0.0) 103 (15.5) 77 (11.3) ## Business2 (%) ## 1 85 (12.2) 86 (12.8) 78 (11.7) 94 (13.8) ## 2 146 (20.9) 130 (19.4) 134 (20.1) 184 (27.1) ## 3 157 (22.5) 158 (23.6) 161 (24.2) 218 (32.1) ## 4 233 (33.3) 200 (29.9) 215 (32.3) 147 (21.6) ## 5 78 (11.2) 96 (14.3) 78 (11.7) 37 ( 5.4) ## Vaccine (%) ## 1 54 ( 7.7) 86 (12.8) 118 (17.7) 104 (15.3) ## 2 29 ( 4.1) 53 ( 7.9) 64 ( 9.6) 75 (11.0) ## 3 83 (11.9) 94 (14.0) 109 (16.4) 128 (18.8) ## 4 138 (19.7) 127 (19.0) 134 (20.1) 192 (28.2) ## 5 395 (56.5) 310 (46.3) 241 (36.2) 181 (26.6) ## Stratified by country_name ## Singapore South Africa South Korea Spain ## n 655 619 752 748 ## Gender_r (%) ## Female 310 (47.3) 294 (47.6) 392 (52.3) 401 (53.6) ## Male 342 (52.2) 321 (51.9) 357 (47.7) 345 (46.1) ## Other 3 ( 0.5) 3 ( 0.5) 0 ( 0.0) 2 ( 0.3) ## ww_fct (%) ## &lt;$2 per day 22 ( 3.4) 9 ( 1.5) 4 ( 0.5) 5 ( 0.7) ## $2-$8 per day 37 ( 5.6) 47 ( 7.6) 4 ( 0.5) 2 ( 0.3) ## $8-$32 per day 236 (36.0) 184 (29.7) 42 ( 5.6) 29 ( 3.9) ## $32+ 339 (51.8) 329 (53.2) 678 (90.2) 692 (92.5) ## Refused 21 ( 3.2) 50 ( 8.1) 24 ( 3.2) 20 ( 2.7) ## educ_fact (%) ## Less than high school 205 (31.3) 136 (22.0) 183 (24.4) 199 (26.6) ## High school some college 219 (33.4) 85 (13.8) 145 (19.4) 129 (17.2) ## Bachelor 178 (27.2) 318 (51.5) 340 (45.4) 309 (41.3) ## Post Graduate 53 ( 8.1) 79 (12.8) 81 (10.8) 111 (14.8) ## agegroup_fct (%) ## 18-24 118 (18.0) 77 (12.5) 83 (11.1) 115 (15.4) ## 25-54 399 (60.9) 400 (64.7) 499 (66.6) 486 (65.0) ## 55-64 84 (12.8) 70 (11.3) 97 (13.0) 70 ( 9.4) ## 65+ 54 ( 8.2) 71 (11.5) 70 ( 9.3) 77 (10.3) ## Business2 (%) ## 1 40 ( 6.1) 36 ( 5.8) 20 ( 2.7) 88 (11.8) ## 2 120 (18.3) 90 (14.5) 35 ( 4.7) 173 (23.1) ## 3 153 (23.4) 211 (34.1) 161 (21.4) 178 (23.8) ## 4 245 (37.4) 208 (33.6) 362 (48.1) 234 (31.3) ## 5 97 (14.8) 74 (12.0) 174 (23.1) 75 (10.0) ## Vaccine (%) ## 1 97 (14.8) 9 ( 1.5) 11 ( 1.5) 47 ( 6.3) ## 2 40 ( 6.1) 21 ( 3.4) 27 ( 3.6) 53 ( 7.1) ## 3 73 (11.1) 84 (13.6) 114 (15.2) 92 (12.3) ## 4 126 (19.2) 189 (30.5) 273 (36.3) 156 (20.9) ## 5 319 (48.7) 316 (51.1) 327 (43.5) 400 (53.5) ## Stratified by country_name ## Sweden United Kingdom United States p ## n 650 768 773 ## Gender_r (%) &lt;0.001 ## Female 326 (50.2) 408 (53.3) 423 (55.0) ## Male 322 (49.5) 344 (44.9) 337 (43.8) ## Other 2 ( 0.3) 14 ( 1.8) 9 ( 1.2) ## ww_fct (%) &lt;0.001 ## &lt;$2 per day 18 ( 2.8) 8 ( 1.0) 7 ( 0.9) ## $2-$8 per day 1 ( 0.2) 5 ( 0.7) 7 ( 0.9) ## $8-$32 per day 2 ( 0.3) 55 ( 7.2) 20 ( 2.6) ## $32+ 593 (91.2) 644 (83.9) 716 (92.6) ## Refused 36 ( 5.5) 56 ( 7.3) 23 ( 3.0) ## educ_fact (%) &lt;0.001 ## Less than high school 325 (50.0) 167 (21.8) 58 ( 7.5) ## High school some college 146 (22.5) 197 (25.7) 143 (18.6) ## Bachelor 114 (17.5) 254 (33.2) 388 (50.5) ## Post Graduate 65 (10.0) 148 (19.3) 180 (23.4) ## agegroup_fct (%) &lt;0.001 ## 18-24 63 ( 9.7) 121 (15.8) 43 ( 5.6) ## 25-54 297 (45.7) 479 (62.5) 567 (73.7) ## 55-64 128 (19.7) 79 (10.3) 88 (11.4) ## 65+ 162 (24.9) 87 (11.4) 71 ( 9.2) ## Business2 (%) &lt;0.001 ## 1 45 ( 6.9) 67 ( 8.7) 68 ( 8.8) ## 2 121 (18.6) 104 (13.5) 125 (16.2) ## 3 257 (39.5) 234 (30.5) 182 (23.5) ## 4 162 (24.9) 271 (35.3) 289 (37.4) ## 5 65 (10.0) 92 (12.0) 109 (14.1) ## Vaccine (%) &lt;0.001 ## 1 53 ( 8.2) 60 ( 7.8) 54 ( 7.0) ## 2 56 ( 8.6) 54 ( 7.0) 33 ( 4.3) ## 3 117 (18.0) 105 (13.7) 103 (13.3) ## 4 128 (19.7) 188 (24.5) 242 (31.3) ## 5 296 (45.5) 361 (47.0) 341 (44.1) ## Stratified by country_name ## test ## n ## Gender_r (%) ## Female ## Male ## Other ## ww_fct (%) ## &lt;$2 per day ## $2-$8 per day ## $8-$32 per day ## $32+ ## Refused ## educ_fact (%) ## Less than high school ## High school some college ## Bachelor ## Post Graduate ## agegroup_fct (%) ## 18-24 ## 25-54 ## 55-64 ## 65+ ## Business2 (%) ## 1 ## 2 ## 3 ## 4 ## 5 ## Vaccine (%) ## 1 ## 2 ## 3 ## 4 ## 5 #Supplemental figure "],["conclusie.html", "9 Conclusie", " 9 Conclusie Het originele script bevat alleen twee errors, en enkele aanpassingen voor paths en variabel naam en andere klein aanpassingen vereiste. "],["dit-opdracht-wordt-de-structured-query-language---or-sql-programmeertaal-gebruikt-voor-het-beheren-van-relationele-databases..html", "10 Dit opdracht wordt de Structured Query Language - or SQL programmeertaal gebruikt voor het beheren van relationele databases. 10.1 Data laden 10.2 Data Tidy maken 10.3 Een nieuwe PostgreSQL database maken onder de naam “workflowsdb” in Dbeaver 10.4 ## SQL script 10.5 samenvoegen van gapminder, flu en dengue data 10.6 De data exporteren naar Dbeaver", " 10 Dit opdracht wordt de Structured Query Language - or SQL programmeertaal gebruikt voor het beheren van relationele databases. Met SQL wordt verschillende bewerkingen op de flu and dengue data uitgevoerd, zoals het maken en wijzigen van databasestructuren zoals tabellen toevoegen en het manipuleren van gegevens binnen die structuren. 10.1 Data laden ## # A tibble: 6 × 30 ## Date Argentina Australia Austria Belgium Bolivia Brazil Bulgaria Canada ## &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2002-12-29 NA NA NA NA NA 174 NA NA ## 2 2003-01-05 NA NA NA NA NA 162 NA NA ## 3 2003-01-12 NA NA NA NA NA 174 NA NA ## 4 2003-01-19 NA NA NA NA NA 162 NA NA ## 5 2003-01-26 NA NA NA NA NA 131 NA NA ## 6 2003-02-02 136 NA NA NA NA 151 NA NA ## # ℹ 21 more variables: Chile &lt;dbl&gt;, France &lt;dbl&gt;, Germany &lt;dbl&gt;, Hungary &lt;dbl&gt;, ## # Japan &lt;dbl&gt;, Mexico &lt;dbl&gt;, Netherlands &lt;dbl&gt;, `New Zealand` &lt;dbl&gt;, ## # Norway &lt;dbl&gt;, Paraguay &lt;dbl&gt;, Peru &lt;dbl&gt;, Poland &lt;dbl&gt;, Romania &lt;dbl&gt;, ## # Russia &lt;dbl&gt;, `South Africa` &lt;dbl&gt;, Spain &lt;dbl&gt;, Sweden &lt;dbl&gt;, ## # Switzerland &lt;dbl&gt;, Ukraine &lt;dbl&gt;, `United States` &lt;dbl&gt;, Uruguay &lt;dbl&gt; ## # A tibble: 6 × 11 ## Date Argentina Bolivia Brazil India Indonesia Mexico Philippines ## &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2002-12-29 NA 0.101 0.073 0.062 0.101 NA NA ## 2 2003-01-05 NA 0.143 0.098 0.047 0.039 NA NA ## 3 2003-01-12 NA 0.176 0.119 0.051 0.059 0.071 NA ## 4 2003-01-19 NA 0.173 0.17 0.032 0.039 0.052 NA ## 5 2003-01-26 NA 0.146 0.138 0.04 0.112 0.048 NA ## 6 2003-02-02 NA 0.16 0.202 0.038 0.049 0.041 NA ## # ℹ 3 more variables: Singapore &lt;dbl&gt;, Thailand &lt;dbl&gt;, Venezuela &lt;dbl&gt; ## country year infant_mortality life_expectancy fertility ## 1 Albania 1960 115.40 62.87 6.19 ## 2 Algeria 1960 148.20 47.50 7.65 ## 3 Angola 1960 208.00 35.98 7.32 ## 4 Antigua and Barbuda 1960 NA 62.97 4.43 ## 5 Argentina 1960 59.87 65.39 3.11 ## 6 Armenia 1960 NA 66.86 4.55 ## population gdp continent region ## 1 1636054 NA Europe Southern Europe ## 2 11124892 13828152297 Africa Northern Africa ## 3 5270844 NA Africa Middle Africa ## 4 54681 NA Americas Caribbean ## 5 20619075 108322326649 Americas South America ## 6 1867396 NA Asia Western Asia 10.2 Data Tidy maken ## # A tibble: 6 × 3 ## Date country aantal_flu ## &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002-12-29 Argentina NA ## 2 2002-12-29 Australia NA ## 3 2002-12-29 Austria NA ## 4 2002-12-29 Belgium NA ## 5 2002-12-29 Bolivia NA ## 6 2002-12-29 Brazil 174 ## # A tibble: 6 × 3 ## year country aantal_flu ## &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2002 Argentina NA ## 2 2002 Australia NA ## 3 2002 Austria NA ## 4 2002 Belgium NA ## 5 2002 Bolivia NA ## 6 2002 Brazil 174 ## # A tibble: 6 × 3 ## Date country aantal_dengue ## &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002-12-29 Argentina NA ## 2 2002-12-29 Bolivia 0.101 ## 3 2002-12-29 Brazil 0.073 ## 4 2002-12-29 India 0.062 ## 5 2002-12-29 Indonesia 0.101 ## 6 2002-12-29 Mexico NA ## # A tibble: 6 × 3 ## year country aantal_dengue ## &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2002 Argentina NA ## 2 2002 Bolivia 0.101 ## 3 2002 Brazil 0.073 ## 4 2002 India 0.062 ## 5 2002 Indonesia 0.101 ## 6 2002 Mexico NA 10.3 Een nieuwe PostgreSQL database maken onder de naam “workflowsdb” in Dbeaver Hier moet de gebruiker zijn eigen gegevens invullen 10.4 ## SQL script – Inspecteer de inhoud van de data_flu_tidy tabel SELECT * FROM data_flu_tidy LIMIT 10; – Inspecteer de inhoud van de data_dengue_tidy tabel SELECT * FROM data_dengue_tidy LIMIT 10; – Inspecteer de inhoud van de data_gapminder tabel SELECT * FROM data_gapminder LIMIT 10; —————————————————————- ## Data inspectie in Dbeaver ## Data inspectie in R ## # A tibble: 6,590 × 3 ## year country aantal_dengue ## &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2002 Argentina NA ## 2 2002 Bolivia 0.101 ## 3 2002 Brazil 0.073 ## 4 2002 India 0.062 ## 5 2002 Indonesia 0.101 ## 6 2002 Mexico NA ## 7 2002 Philippines NA ## 8 2002 Singapore 0.059 ## 9 2002 Thailand NA ## 10 2002 Venezuela NA ## # ℹ 6,580 more rows ## # A tibble: 19,111 × 3 ## year country aantal_flu ## &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2002 Argentina NA ## 2 2002 Australia NA ## 3 2002 Austria NA ## 4 2002 Belgium NA ## 5 2002 Bolivia NA ## 6 2002 Brazil 174 ## 7 2002 Bulgaria NA ## 8 2002 Canada NA ## 9 2002 Chile NA ## 10 2002 France NA ## # ℹ 19,101 more rows ## # A tibble: 10,545 × 9 ## country year infant_mortality life_expectancy fertility population gdp ## &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Albania 1960 115. 62.9 6.19 1636054 NA ## 2 Algeria 1960 148. 47.5 7.65 11124892 1.38e10 ## 3 Angola 1960 208 36.0 7.32 5270844 NA ## 4 Antigua… 1960 NA 63.0 4.43 54681 NA ## 5 Argenti… 1960 59.9 65.4 3.11 20619075 1.08e11 ## 6 Armenia 1960 NA 66.9 4.55 1867396 NA ## 7 Aruba 1960 NA 65.7 4.82 54208 NA ## 8 Austral… 1960 20.3 70.9 3.45 10292328 9.67e10 ## 9 Austria 1960 37.3 68.8 2.7 7065525 5.24e10 ## 10 Azerbai… 1960 NA 61.3 5.57 3897889 NA ## # ℹ 10,535 more rows ## # ℹ 2 more variables: continent &lt;fct&gt;, region &lt;fct&gt; 10.5 samenvoegen van gapminder, flu en dengue data 10.6 De data exporteren naar Dbeaver Joining Gapminder, Flu, and Dengue Data ## Statistics en Visualizatie dengue_Mexico Conclusie Dit rapport demonstreert de stappen die betrokken zijn bij het laden, opschonen, opslaan, samenvoegen en analyseren van gegevens met behulp van R en PostgreSQL. Het proces omvat het omzetten van onbewerkte gegevens in overzichtelijke formaten, het opslaan en beheren van gegevens in een relationele database, het uitvoeren van joins om gegevens uit meerdere bronnen te combineren en het genereren van beschrijvende statistieken en visualisaties van dengue en flu gevallen in lannd Mexico om betekenisvolle inzichten te verkrijgen. "],["covid-19-report-parametrizing-in-rmarkdown.html", "11 Covid-19 report parametrizing in RMarkdown 11.1 Introductie 11.2 load de data 11.3 Data filteren en gegevens voorbereiden 11.4 Plotten maken voor COVID-19-gevallen en sterfgevallen.", " 11 Covid-19 report parametrizing in RMarkdown 11.1 Introductie Dit rapport biedt een analyse van COVID-19-gevallen en sterfgevallen voor een bepaald land en jaar. Het rapport is geparametriseerd om flexibiliteit mogelijk te maken bij het selecteren van het land, het jaar en de maanden waarin u geïnteresseerd bent. De data is gedownload van European Center for Disease Control (ECDC). De originele RMarkdown bestand waar de parameters ingesteld is bewaard in mijn portofolio repository link naar repo 11.2 load de data Eerst laden de benodigde libraries en de dataset. # libraries library(tidyverse) library(lubridate) library(ggplot2) library(readr) library(dplyr) library(knitr) # Load the data covid_data &lt;- read.csv(&quot;doc/parameters_bestanden/data.csv&quot;) colnames(covid_data) head(covid_data) # Convert dateRep to Date type covid_data$dateRep &lt;- dmy(covid_data$dateRep) # Print the first few rows of the dataset head(covid_data) 11.3 Data filteren en gegevens voorbereiden Filter de gegevens op basis van de parameters voor het opgegeven land, jaar en periode. # Access the parameters country &lt;- params$country year &lt;- params$year months &lt;- params$months # Filter data based on parameters covid_filtered &lt;- covid_data %&gt;% filter(countriesAndTerritories == params$country &amp; year == params$year &amp; month %in% params$months) head(covid_filtered) knitr::include_graphics(&quot;images/parameters_filter.png&quot;) cat(&quot;*Figure 1: COVID-19 Cases filter*&quot;) ## *Figure 1: COVID-19 Cases filter* 11.4 Plotten maken voor COVID-19-gevallen en sterfgevallen. # Plot COVID-19 cases cases_plot &lt;- ggplot(covid_filtered, aes(x = dateRep, y = cases)) + geom_line(color = &quot;green&quot;) + geom_point(aes(color = &quot;darkblue&quot;)) + labs(title = paste(&quot;COVID-19 gevallen in&quot; , params$country , params$months , params$year , sep = &quot; &quot;), x = &quot;Date&quot;, y = &quot;Aantal gevallen&quot;) + theme( plot.title = element_text(size = 14, face = &quot;bold&quot;), axis.title = element_text(size = 12), axis.text = element_text(size = 10), panel.grid.major = element_line(color = &quot;lightblue&quot;, size = 0.5) ) cases_plot library(knitr) knitr::include_graphics(&quot;images/parameters_COVID_cases_Germany.png&quot;) cat(&quot;*Figure 1: COVID-19 Cases in Germany in maand mei 2021 *&quot;) ## *Figure 1: COVID-19 Cases in Germany in maand mei 2021 * # Plot for COVID-19 related deaths sterfgevallen &lt;- ggplot(covid_filtered, aes(x = dateRep, y = deaths)) + geom_line(color = &quot;darkblue&quot;) + geom_point(color = &quot;red&quot;) + labs(title = paste(&quot;COVID-19 sterfgevallen in&quot; , params$country , params$months , params$year, sep = &quot; &quot;), x = &quot;Date&quot;, y = &quot;Aantal sterfgevallen&quot;) + theme_minimal() sterfgevallen library(knitr) knitr::include_graphics(&quot;images/parameters_COVID_deathes_Germany.png&quot;) cat(&quot;*Figure 1: COVID-19 sterfgevallen in Germany in maand mei 2021*&quot;) ## *Figure 1: COVID-19 sterfgevallen in Germany in maand mei 2021* "],["rpackage-amrnetherland.html", "12 Rpackage AMRNetherland", " 12 Rpackage AMRNetherland Om te demonstreren dat ik weet hoe ik een R-pakket kan bouwen, heb ik mijn eigen aangepaste pakket gemaakt met de naam AMRNetherland. Dit R-pakket biedt hulpmiddelen voor het analyseren en visualiseren van gegevens over antimicrobiële resistentie (AMR) in Nederland. Dit pakket bevat functies om de prevalentie van resistentiegenen in procenten te berekenen, gegevens per stad en provincie te filteren en samen te vatten, en meer. Het is ontworpen om onderzoekers en volksgezondheidsfunctionarissen te helpen gemakkelijk toegang te krijgen tot AMR-gegevens en deze te analyseren om trends te monitoren, patiëntgegevens te verkrijgen en de besluitvorming te informeren. You can install the development version of AMRNetherland from GitHub with: # install.packages(&quot;devtools&quot;) devtools::install_github(&quot;MarianaMousa1/AMRNetherland&quot;) # Libraries loaden en data genereren library(tidyverse) library(AMRNetherland) # Genereer een voorbeeld data frame set.seed(123) # Voor reproduceerbaarheid # Aantal rijen in het data frame n &lt;- 100 # Lijst van provincies in Nederland provinces &lt;- c(&quot;Drenthe&quot;, &quot;Flevoland&quot;, &quot;Friesland&quot;, &quot;Utrecht&quot;) # Data frame genereren amr_data &lt;- tibble( institute_province = sample(provinces, n, replace = TRUE), n_classes_antibiotica = sample(1:10, n, replace = TRUE) ) # Bekijk de eerste paar rijen van het data frame head(amr_data) ## # A tibble: 6 × 2 ## institute_province n_classes_antibiotica ## &lt;chr&gt; &lt;int&gt; ## 1 Friesland 9 ## 2 Friesland 4 ## 3 Friesland 6 ## 4 Flevoland 9 ## 5 Friesland 9 ## 6 Flevoland 7 functie plot_ab_resis toepassen plot_ab_resis(amr_data) "],["introductie-naar-project-amr.html", "13 Introductie naar project AMR 13.1 Doelstellingen 13.2 Methodologie 13.3 Referenties", " 13 Introductie naar project AMR Antimicrobiële middelen, zoals antibiotica, zijn stoffen die worden ingezet om de groei of levensvatbaarheid van micro-organismen te onderdrukken of te vernietigen. Het vermogen van micro-organismen, zoals bacteriën, om te overleven en te groeien in aanwezigheid van antimicrobiële middelen, staat bekend als antimicrobiële resistentie (AMR). Hierbij ontwikkelen micro-organismen weerstand tegen medicijnen die zijn ontworpen om ze te doden of hun groei te remmen. AMR ontstaat wanneer micro-organismen niet meer reageren op antimicrobiële middelen, waardoor infecties moeilijk of onmogelijk te behandelen zijn. Dit probleem wordt vooral veroorzaakt door verkeerd en overmatig gebruik van antimicrobiële middelen bij mensen, dieren en planten. AMR vormt een ernstige bedreiging voor de wereldwijde gezondheid en ontwikkeling en brengt miljoenen levens in gevaar. Het treft landen over de hele wereld en ondermijnt de effectiviteit van moderne geneeskunde, waardoor infecties moeilijker te behandelen zijn en medische procedures risicovoller worden. Het oneigenlijke en overmatige gebruik van antibiotica in zowel de geneeskunde als de landbouw zijn de belangrijkste drijfveren van AMR (O’Neill, 2016). Het begrijpen van de geografische verspreiding en determinanten van AMR is cruciaal voor het ontwikkelen van gerichte interventies en beleidsmaatregelen om de impact ervan te beperken (Ventola, 2015). Eerdere studies hebben aangetoond dat regionale verschillen in gezondheidszorgpraktijken en antibioticagebruik kunnen leiden tot variërende resistentiecijfers (Van Boeckel et al., 2014). 13.1 Doelstellingen Het hoofddoel van ons onderzoek is om de Shiny App voor het typeren en visualiseren van bacteriële plasmiden verder te ontwikkelen en te verfijnen door extra epidemiologische gegevens toe te voegen, zoals informatie over de isolatiedatum, geografische locatie, de mogelijkheid om eigen fasta/plasmiden toe te voegen en te vergelijken met de database (metadata.txt), en het optimaliseren voor eenvoudig uploaden. We zullen ook patiënt metadata integreren. Van de opdrachtgever Gijs Teunis moet deze applicatie verbeterd en uitgebreid worden. 1. Geografische Verspreiding: Het in kaart brengen van de verspreiding van AMR in Nederland. 2. Resistente Bacteriën: Het identificeren van veelvoorkomende antibioticumresistente bacteriën. 3. Trend Analyse: Het onderzoeken van veranderingen in antibioticaresistentie in de loop der tijd. 13.2 Methodologie Gegevens zijn verzameld uit het RIVM: Rijksinstituut voor Volksgezondheid en Milieu. Ook willen we gebruikersvriendelijke functies toevoegen waarmee gebruikers isolaten kunnen toevoegen en vergelijken met onze dataset. 13.2.1 Belang Dit project streeft ernaar het begrip van de dynamiek van AMR in Nederland te vergroten en gegevens te leveren die volksgezondheidsautoriteiten helpen bij het ontwikkelen van effectieve strategieën om antimicrobiële resistentie te bestrijden. Antimicrobiële resistentie (AMR) is een groeiend wereldwijd gezondheidsprobleem dat de effectiviteit van behandelingen voor infectieziekten bedreigt [@vanboeckel2014]. Het oneigenlijke en overmatige gebruik van antibiotica in zowel de geneeskunde als de landbouw zijn de belangrijkste drijfveren van AMR [@ventola2015a]. Het begrijpen van de geografische verspreiding en determinanten van AMR is cruciaal voor het ontwikkelen van gerichte interventies [@vanboeckel2014]. [@ventola2015b] 13.3 Referenties Aanvullende referenties uit Zotero… "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
